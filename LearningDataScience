{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "27a55e9c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import scipy as sc\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "from sklearn.datasets import make_circles\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "8f4f59e5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Crear el Dataset\n",
    "n = 500 #Numero de muestras\n",
    "p = 2 #Características o parámetros que se utilizan de cada muestra\n",
    "\n",
    "X, Y = make_circles(n_samples = n, factor = 0.5, noise = 0.05)\n",
    "Y = Y[:, np.newaxis]\n",
    "\n",
    "plt.scatter(X[Y[:, 0] == 0, 0], X[Y[:, 0] == 0, 1], c =\"skyblue\")\n",
    "plt.scatter(X[Y[:, 0] == 1, 0], X[Y[:, 0] == 1, 1], c =\"salmon\")\n",
    "plt.axis(\"equal\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "b961fbcc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(500, 1)"
      ]
     },
     "execution_count": 79,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "669de4fa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x18a90f40220>]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Clase de la capa de la Red Neuronal\n",
    "class neural_layer():\n",
    "    def __init__(self, n_conn, n_neur, act_f):\n",
    "        self.act_f = act_f\n",
    "        self.b = np.random.rand(1, n_neur) * 2 - 1 #[0,1] * 2 = [0,2] - 1 = [-1,1]\n",
    "        self.W = np.random.rand(n_conn, n_neur) * 2 - 1 #[0,1] * 2 = [0,2] - 1 = [-1,1]\n",
    "        \n",
    "#Funciones de Activación\n",
    "sigm = (lambda x: 1 / (1 + np.e**(-x)), #Así se definen dos funciones y se selecciona con sigm[0] o [1]\n",
    "        lambda x: x * (1 - x)) #Derivada de la función sigmoide\n",
    "\n",
    "tanh = (lambda x : ((np.e**x)-(np.e**(-x)))/((np.e**x)+(np.e**(-x))),\n",
    "        lambda x : 4/((((np.e**x)+(np.e**(-x))))**2))\n",
    "\n",
    "relu = lambda x: np.maximum(0, x)\n",
    "\n",
    "_x = np.linspace(-5, 5, 100)\n",
    "plt.plot(_x, tanh[1](_x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "99b24927",
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "l0 = neural_layer(p, 4, sigm) #layer 0, capa 0, p = conexiones de entrada, 4 neuronas y activacion\n",
    "l1 = neural_layer(4, 8, sigm) # p= conexiones es 4, 8 neuronas(4+4) y activacion\n",
    "\n",
    "def create_nn(topology, act_f):\n",
    "    \n",
    "    nn = []\n",
    "    \n",
    "    for l, layer in enumerate(topology[:-1]):\n",
    "        nn.append(neural_layer(topology[l], topology[l+1], act_f))\n",
    "    return nn\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "bb3af7b0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<__main__.neural_layer at 0x18a91367550>,\n",
       " <__main__.neural_layer at 0x18a913675b0>,\n",
       " <__main__.neural_layer at 0x18a91367e50>,\n",
       " <__main__.neural_layer at 0x18a91367a90>]"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "create_nn(topology, sigm)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "ca265c50",
   "metadata": {},
   "outputs": [],
   "source": [
    "topology = [p, 4, 8, 1]\n",
    "\n",
    "neural_net = create_nn(topology, sigm)\n",
    "\n",
    "l2_cost = (lambda Yp, Yr: np.mean((Yp- Yr)**2),\n",
    "          lambda Yp, Yr: (Yp - Yr)) #Derivada del coste"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "8de60794",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Función de entrenamiento\n",
    "def train(neural_net, X, Y, l2_cost,lr=0.1,train=True):\n",
    "\n",
    "    out =[(None,X)] # En este array guarda los pares de z y a [(z0,a0),(z1,a1),...]\n",
    "  #1. Propagación hacia adelante.\n",
    "    for l, layer in enumerate(neural_net):\n",
    "    \n",
    "        z = np.dot(out[-1][1],neural_net[l].W) + neural_net[l].b\n",
    "        a = neural_net[l].act_f[0](z)\n",
    "\n",
    "        out.append((z,a))\n",
    "\n",
    "  #2. Backpropagation and Gradient descent\n",
    "    if train:\n",
    "        delta=[]\n",
    "    \n",
    "        for l in reversed(range(0,len(neural_net))):\n",
    "            z=out[l+1][0]\n",
    "            a=out[l+1][1]\n",
    "      #Si estamos en la ultima capa\n",
    "            if l == len(neural_net) - 1:\n",
    "                delta.insert(0, l2_cost[1](a, Y) * neural_net[l].act_f[1](a))\n",
    "      #Calculamos delta en las capas previas\n",
    "            else:\n",
    "                delta.insert(0,np.dot(delta[0],_W.T) * neural_net[l].act_f[1](a)) \n",
    "            _W=neural_net[l].W \n",
    "      #Lo guardamos en una variable auxiliar para poder modificar los valores al mismo tiempo usando el Gradiente descendente\n",
    "          \n",
    "      #Gradient Descent : Ajuste de la matriz de pesos y el valor del vector sesgo.\n",
    "            neural_net[l].b = neural_net[l].b - lr * np.mean(delta[0], axis=0, keepdims=True)\n",
    "            neural_net[l].W = neural_net[l].W - np.dot(out[l][1].T,delta[0])*lr\n",
    "    return out[-1][1]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "4ce32dae",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import time\n",
    "from IPython.display import clear_output\n",
    "\n",
    "#Se crea una red neuronal completamente nueva con la topologia y funcion sigmoide\n",
    "neural_n = create_nn(topology, sigm)\n",
    "loss = [] #Aquí guardaremos los diferentes costes, y después poder graficar el coste a través del tiempo\n",
    "\n",
    "for i in range(2500):\n",
    "    #Comienza el entrenamiento\n",
    "    pY = train(neural_n, X, Y, l2_cost, lr = 0.01)\n",
    "    \n",
    "    if i % 25 == 0: #Cada 25 iteraciones\n",
    "        loss.append(l2_cost[0](pY, Y)) #Calcula el coste y se añade al vector loss\n",
    "        \n",
    "        res = 50\n",
    "        \n",
    "        _x0 = np.linspace(-1.5, 1.5, res) #Genera una malla 50,50\n",
    "        _x1 = np.linspace(-1.5, 1.5, res) #En donde se hará una predicción\n",
    "        \n",
    "        _Y = np.zeros((res, res))\n",
    "        \n",
    "        for i0, x0 in enumerate(_x0):\n",
    "            for i1, x1 in enumerate(_x1):\n",
    "                _Y[i0, i1] = train(neural_n, np.array([[x0, x1]]), Y, l2_cost, train = False)[0][0]\n",
    "                #Con esto haremos la predicción, por eso la variable train se coloca en falso.\n",
    "        \n",
    "        plt.pcolormesh(_x0, _x1, _Y, cmap = \"coolwarm\")\n",
    "        plt.axis(\"equal\")\n",
    "        \n",
    "        plt.scatter(X[Y[:, 0] == 0, 0], X[Y[:, 0] == 0, 1], c =\"skyblue\")\n",
    "        plt.scatter(X[Y[:, 0] == 1, 0], X[Y[:, 0] == 1, 1], c =\"salmon\")\n",
    "        \n",
    "        clear_output(wait = True)\n",
    "        plt.show()\n",
    "        plt.plot(range(len(loss)), loss)\n",
    "        plt.show()\n",
    "        time.sleep(0.5)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
